#ifndef AUDIOTHREAD_CMD_H
#define AUDIOTHREAD_CMD_H

typedef enum {
    /* 0x00 */ AUDIOTHREAD_OP_CHANNEL_UNK_0, // unused?
    /* 0x01 */ AUDIOTHREAD_OP_CHANNEL_VOL_SCALE,
    /* 0x02 */ AUDIOTHREAD_OP_CHANNEL_VOL, // unused?
    /* 0x03 */ AUDIOTHREAD_OP_CHANNEL_PAN_SIGNED,
    /* 0x04 */ AUDIOTHREAD_OP_CHANNEL_FREQ_SCALE,
    /* 0x05 */ AUDIOTHREAD_OP_CHANNEL_REVERB_VOLUME,
    /* 0x06 */ AUDIOTHREAD_OP_CHANNEL_SCRIPT_IO,
    /* 0x07 */ AUDIOTHREAD_OP_CHANNEL_PAN_UNSIGNED,
    /* 0x08 */ AUDIOTHREAD_OP_CHANNEL_STOP_SOMETHING2,
    /* 0x09 */ AUDIOTHREAD_OP_CHANNEL_MUTE_FLAGS, // unused?
    /* 0x0A */ AUDIOTHREAD_OP_CHANNEL_VIBRATO_X8,     // unused?
    /* 0x0B */ AUDIOTHREAD_OP_CHANNEL_VIBRATO_X32,    // unused?
    /* 0x0C */ AUDIOTHREAD_OP_CHANNEL_COMB_FILTER_SIZE,
    /* 0x0D */ AUDIOTHREAD_OP_CHANNEL_COMB_FILTER_GAIN,
    /* 0x0E */ AUDIOTHREAD_OP_CHANNEL_STEREO,
    /* 0x0F */ AUDIOTHREAD_OP_CHANNEL_UNK_F,
    /* 0x10 */ AUDIOTHREAD_OP_CHANNEL_UNK_10,
    /* 0x11 */ AUDIOTHREAD_OP_CHANNEL_REVERB_INDEX,
    /* 0x12 */ AUDIOTHREAD_OP_CHANNEL_SURROUND_EFFECT_INDEX,
    /* 0x13 */ AUDIOTHREAD_OP_CHANNEL_UNK_13,
    /* 0x14 */ AUDIOTHREAD_OP_CHANNEL_UNK_14,
    /* 0x41 */ AUDIOTHREAD_OP_SEQPLAYER_41 = 0x41,
    /* 0x46 */ AUDIOTHREAD_OP_SEQPLAYER_46 = 0x46,
    /* 0x47 */ AUDIOTHREAD_OP_SEQPLAYER_47,
    /* 0x48 */ AUDIOTHREAD_OP_SEQPLAYER_48, // unused?
    /* 0x49 */ AUDIOTHREAD_OP_SEQPLAYER_49, // unused?
    /* 0x4A */ AUDIOTHREAD_OP_SEQPLAYER_4A, // unused?
    /* 0x4B */ AUDIOTHREAD_OP_SEQPLAYER_4B, // unused?
    /* 0x4C */ AUDIOTHREAD_OP_SEQPLAYER_4C, // unused?
    /* 0x4D */ AUDIOTHREAD_OP_SEQPLAYER_4D, // unused?
    /* 0x4E */ AUDIOTHREAD_OP_SEQPLAYER_4E, // unused?
    /* 0x81 */ AUDIOTHREAD_OP_GLOBAL_81 = 0x81, // unused?
    /* 0x82 */ AUDIOTHREAD_OP_GLOBAL_82,
    /* 0x83 */ AUDIOTHREAD_OP_GLOBAL_83, // Disable Sequence
    /* 0x85 */ AUDIOTHREAD_OP_GLOBAL_85 = 0x85,
    /* 0x90 */ AUDIOTHREAD_OP_GLOBAL_90 = 0x90,
    /* 0xE0 */ AUDIOTHREAD_OP_GLOBAL_E0 = 0xE0, // unused?
    /* 0xE1 */ AUDIOTHREAD_OP_GLOBAL_E1, // unused?
    /* 0xE2 */ AUDIOTHREAD_OP_GLOBAL_E2, // unused?
    /* 0xE3 */ AUDIOTHREAD_OP_GLOBAL_E3,
    /* 0xE4 */ AUDIOTHREAD_OP_GLOBAL_E4,
    /* 0xE5 */ AUDIOTHREAD_OP_GLOBAL_E5,
    /* 0xE6 */ AUDIOTHREAD_OP_GLOBAL_E6,
    /* 0xF0 */ AUDIOTHREAD_OP_GLOBAL_F0 = 0xF0,
    /* 0xF1 */ AUDIOTHREAD_OP_GLOBAL_F1,
    /* 0xF2 */ AUDIOTHREAD_OP_GLOBAL_F2,
    /* 0xF3 */ AUDIOTHREAD_OP_GLOBAL_F3, // unused?
    /* 0xF4 */ AUDIOTHREAD_OP_GLOBAL_F4, // unused?
    /* 0xF5 */ AUDIOTHREAD_OP_GLOBAL_F5, // unused?
    /* 0xF6 */ AUDIOTHREAD_OP_GLOBAL_F6,
    /* 0xF8 */ AUDIOTHREAD_OP_GLOBAL_F8 = 0xF8,
    /* 0xF9 */ AUDIOTHREAD_OP_GLOBAL_F9,
    /* 0xFA */ AUDIOTHREAD_OP_GLOBAL_FA,
    /* 0xFB */ AUDIOTHREAD_OP_GLOBAL_FB, // unused?
    /* 0xFC */ AUDIOTHREAD_OP_GLOBAL_FC, // unused?
    /* 0xFD */ AUDIOTHREAD_OP_GLOBAL_FD,
    /* 0xFE */ AUDIOTHREAD_OP_GLOBAL_FE // unused?
} AudioThreadCmdId;

#define MK_CMD(b0, b1, b2, b3) (_SHIFTL(b0, 24, 8) | _SHIFTL(b1, 16, 8) | _SHIFTL(b2, 8, 8) | _SHIFTL(b3, 0, 8))

#define AUDIOTHREAD_CMD_CHANNEL_SCRIPT_IO(seqPlayerIndex, channelIndex, ioPort, ioData)                                    \
    AudioThread_QueueCmdS8(MK_CMD(AUDIOTHREAD_OP_CHANNEL_SCRIPT_IO, (seqPlayerIndex), (channelIndex), (ioPort)), (ioData))


#endif
